{{- $d := .Values.helm }}
{{- $rls := .Values.global.release }}
{{- $tplVals := .Values }}
{{- $_ := set $tplVals "Template" .Template }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-gitcall-deployment
  labels:
    release: {{ .Release.Name | quote }}
    app: {{ .Values.helm.app | quote }}
    tier: {{ .Values.helm.tier | quote }}
spec:
  selector:
    matchLabels:
      release: {{ .Release.Name | quote }}
      app: {{ .Values.helm.app | quote }}
      tier: {{ .Values.helm.tier | quote }}
  strategy:
    type: RollingUpdate
  replicas: {{ $d.min_replicas }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/env: {{ tpl ($.Files.Get ".helm.env.tpl") $tplVals | sha256sum }}
        prometheus.io/path: /metrics
        prometheus.io/port: "9100"
        prometheus.io/scrape: "true"
      labels:
        release: {{ .Release.Name | quote }}
        app: {{ .Values.helm.app | quote }}
        tier: {{ .Values.helm.tier | quote }}
    spec:
      terminationGracePeriodSeconds: 40
      initContainers:
        - name: init-wait-postgresql
          image: docker-hub.middleware.biz/public/alpine:3.12
          command: ["sh", "-c", "until nc -zvw1 ${GITCALL_POSTGRESQL_HOST} ${GITCALL_POSTGRESQL_PORT}; do echo waiting for dependencies; sleep 2; done;"]
          env:
            {{- if .Values.global.http_proxy }}
            - name: http_proxy
              value: {{ .Values.global.http_proxy }}
            {{- end }}
            {{- if .Values.global.https_proxy }}
            - name: https_proxy
              value: {{ .Values.global.https_proxy }}
            {{- end }}
            {{- if .Values.global.no_proxy }}
            - name: no_proxy
              value: {{ .Values.global.no_proxy }}
            {{- end }}
            # todo secretalreadyexist true
            {{- tpl ($.Files.Get ".helm.env.tpl") $tplVals | indent 12 }}
        - name: init-wait-rabbitmq
          image: docker-hub.middleware.biz/public/alpine:3.12
          command: ["sh", "-c", "until nc -zvw1 ${GITCALL_RABBITMQ_HOST} ${GITCALL_RABBITMQ_PORT}; do echo waiting for dependencies; sleep 2; done;"]
          env:
            {{- if .Values.global.http_proxy }}
            - name: http_proxy
              value: {{ .Values.global.http_proxy }}
            {{- end }}
            {{- if .Values.global.https_proxy }}
            - name: https_proxy
              value: {{ .Values.global.https_proxy }}
            {{- end }}
            {{- if .Values.global.no_proxy }}
            - name: no_proxy
              value: {{ .Values.global.no_proxy }}
            {{- end }}
            # todo secretalreadyexist true
            {{- tpl ($.Files.Get ".helm.env.tpl") $tplVals | indent 12 }}
      containers:
        - name: main
          imagePullPolicy: {{ $d.image_pull_policy | quote }}
          image: {{ print .Values.image ":" $rls.require.gitcall }}
          command: ["/gitcall/gitcall"]
          args:
            - --config=/gitcall/gitcall.json
            {{- if .Values.logger }}
            {{- if .Values.logger.output }}
            - --logger={{ .Values.logger.output }}
            {{- end }}
            {{- if .Values.logger.level }}
            - --logger-level={{ .Values.logger.level }}
            {{- end }}
            {{- if .Values.logger.format }}
            - --logger-format={{ .Values.logger.format }}
            {{- end }}
            {{- end }}
          env:
            {{- if .Values.global.http_proxy }}
            - name: http_proxy
              value: {{ .Values.global.http_proxy }}
            {{- end }}
            {{- if .Values.global.https_proxy }}
            - name: https_proxy
              value: {{ .Values.global.https_proxy }}
            {{- end }}
            {{- if .Values.global.no_proxy }}
            - name: no_proxy
              value: {{ .Values.global.no_proxy }}
            {{- end }}
            - name: GOPS_CONFIG_DIR
              value: /tmp
            {{- tpl ($.Files.Get ".helm.env.tpl") $tplVals | indent 12 }}
          {{- if .Values.helm.resources }}
          {{- include "cz.kubernetes.container.resources.v1" .Values.helm.resources | indent 10 }}
          {{- else }}
          resources:
            limits:
              cpu: 200m
              memory: 400Mi
            requests:
              cpu: 200m
              memory: 400Mi
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /gitcall/gitcall.json
              subPath: {{ .Values.config_file }}
            - name: tmp
              mountPath: /tmp
          securityContext:
            runAsUser: 501
            runAsGroup: 501
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
            capabilities:
              drop:
                - NET_ADMIN
                - SYS_ADMIN
                - MAC_ADMIN
                - SETUID
                - SETGID
                - FOWNER
                - CHOWN
                - MKNOD
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/worker
          operator: Exists
      {{- if $d.image_pull_secrets }}
      imagePullSecrets:
      {{- range $d.image_pull_secrets}}
        - name: {{ . | quote }}
      {{- end }}
      {{- end}}
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-gitcall-config
        - name: tmp
          emptyDir: {}
