apiVersion: v1
data:
  corezoid_api_sync.config: |
    [
      {is_ready, [
        {port, 8383},
        {disabled, false}
      ]},

      {mw_metrics, [
        {is_enabled, true},
        {subsystems, [erlprometheus]}
      ]},
      {corezoid_sdk, [{scheme, "http://"}]},
      {erlprometheus, [
        {host, {0,0,0,0}},
        {port, 9100}
      ]},

      %% Default application min & max epmd ports for cluster solution
      {kernel, [
        {inet_dist_listen_min, 5666},
        {inet_dist_listen_max, 5666}
      ]},
      {ermql, [

        {publish_request, [
          {servers, [
        {{- if eq .Values.global.mq.internal false }}
                [
                  {host, "${MQ_HOST}"},
                  {port, ${MQ_PORT}},
                  {username, <<"${MQ_USERNAME}">>},
                  {password, <<"${MQ_PASSWORD}">>},
                  {vhost, <<"${MQ_VHOST}">>}
              ]
        {{- else }}
                [
                  {host, "rabbit-service"},
                  {port, 5672},
                  {username, <<"${MQ_USERNAME}">>},
                  {password, <<"${MQ_PASSWORD}">>},
                  {vhost, <<"${MQ_VHOST}">>}
              ]
        {{- end }}
          ]},
            {queues_count, 8},
            {min_size, 5},
            {max_size, 25},
            {start_size, 5}
          ]},

        {consumer_response, [
          {servers, [
        {{- if eq .Values.global.mq.internal false }}
                [
                  {host, "${MQ_HOST}"},
                  {port, ${MQ_PORT}},
                  {username, <<"${MQ_USERNAME}">>},
                  {password, <<"${MQ_PASSWORD}">>},
                  {vhost, <<"${MQ_VHOST}">>}
              ]
        {{- else }}
                [
                  {host, "rabbit-service"},
                  {port, 5672},
                  {username, <<"${MQ_USERNAME}">>},
                  {password, <<"${MQ_PASSWORD}">>},
                  {vhost, <<"${MQ_VHOST}">>}
              ]
        {{- end }}
          ]},
            {connections_per_queue, 4},
            {channels_per_connection, 2},
            {messages_prefetch_size_per_channel, 50}
          ]}
      ]},

      {corezoid_api_sync, [
      {nodes, []},
      {domain, <<"http://${IPNODEDOMAIN}:8090">> }, %% callback domain (podIP)
      {api_port, 8090},
      {corezoid_host, <<"http://capi-service:9080">>},

      %% CALLBACK SETUP
      {callback, [
      {path, <<"/api/1/plugins/callback/">>},         %% Used for generate __callback_url for example host/callback.path/req_id where req_id is autogenerated
      {max_timeout, 60000}                            %% Max timeout to receive callbacks - 60 seconds
      ]}
      ]},
      {lager, [
        %% What handlers to install with what arguments
        {log_root, "/ebsmnt/erlang/corezoid_api_sync/log"},
        {handlers, [ {lager_console_backend, {{ .Values.global.log_level | default "info" }} } ]},
        {extra_sinks,
                [
                {error_logger_lager_event,
                        [{handlers, [
                        {lager_file_backend, [{file, "error_logger.log"}, {level, info}]}]
                         }]
                }
                ]
        },

        %% What colors to use with what log levels
        {colored, true},
        {colors, [
        {debug,     "\e[0;38m" },
        {info,      "\e[1;37m" },
        {notice,    "\e[1;36m" },
        {warning,   "\e[1;33m" },
        {error,     "\e[1;31m" },
        {critical,  "\e[1;35m" },
        {alert,     "\e[1;44m" },
        {emergency, "\e[1;41m" }
        ]},
        %%
        %% Whether to write a crash log, and where. Undefined means no crash logger.
        {crash_log, "crash.log"},
        %% Maximum size in bytes of events in the crash log - defaults to 65536
        {crash_log_msg_size, 65536},
        %% Maximum size of the crash log in bytes, before its rotated, set
                                                                         %% to 0 to disable rotation - default is 0
        {crash_log_size, 10485760},
        %% What time to rotate the crash log - default is no time
        %% rotation. See the README for a description of this format.
        {crash_log_date, "$D0"},
        %% Number of rotated crash logs to keep, 0 means keep only the
        %% current one - default is 0
        {crash_log_count, 1},
        %% Whether to redirect error_logger messages into lager - defaults to true
        {error_logger_redirect, true},
        %% How many messages per second to allow from error_logger before we start dropping them
        {error_logger_hwm, 50},
        %% How big the gen_event mailbox can get before it is switched into sync mode
        {async_threshold, 20},
        %% Switch back to async mode, when gen_event mailbox size decrease from `async_threshold'
        %% to async_threshold - async_threshold_window
        {async_threshold_window, 5}
      ]}
    ].

kind: ConfigMap
metadata:
  name: {{ .Values.appName }}-config
