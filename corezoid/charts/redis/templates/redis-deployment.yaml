---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.appName }}-master
  labels:
    app: {{ .Values.global.product }}
    tier: {{ .Values.appName }}
    role: master
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: {{ .Values.global.product }}
    role: master
    tier: {{ .Values.appName }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-master
  labels:
    app: {{ .Values.global.product }}
    tier: {{ .Values.appName}}
spec:
  selector:
    matchLabels:
      app: {{ .Values.global.product }}
      role: master
      tier: {{ .Values.appName }}
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/redis-configmap.yaml") . | sha256sum }}
      labels:
        app: {{ .Values.global.product }}
        tier: {{ .Values.appName }}
        role: master
    spec:
      containers:
      - name: master
        image: "{{ .Values.image.registry }}/{{ .Values.global.repotype | default "public" }}{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        resources:
          limits:
            cpu: 300m
            memory: 700Mi
          requests:
            cpu: 50m
            memory: 600Mi
        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - "redis-cli -h localhost ping"
          initialDelaySeconds: 15
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - "redis-cli -h localhost ping"
          initialDelaySeconds: 20
          periodSeconds: 3
        ports:
        - containerPort: 6379
        volumeMounts:
          - name: redisconfig
            mountPath: /usr/local/etc/redis
          - name: {{ .Values.appName }}-claim
            mountPath: /ebsmnt/data
      {{- if not  (eq .Values.global.repotype "public") }}
      imagePullSecrets:
        - name: corezoid-secret
      {{- end }}
      volumes:
        - name: redisconfig
          configMap:
            name: {{ .Values.appName }}-config
        - name: {{ .Values.appName }}-claim
          persistentVolumeClaim:
            claimName: {{ .Values.global.redis.persistantVolumeClaimName}}
            readOnly: false
