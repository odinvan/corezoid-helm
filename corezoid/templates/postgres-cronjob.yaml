{{- if  (.Values.global.db.rotation.enabled) }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: postgres-taskarchive-cron
  labels:
    app: {{ .Values.global.product }}
    tier: postgres
spec:
  schedule: {{ .Values.global.db.rotation.schedule | quote }}
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  startingDeadlineSeconds: 120
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      labels:
        app: {{ .Values.global.product }}
        tier: postgres
    spec:
      template:
        spec:
          containers:
            - image: docker-hub.middleware.biz/public/postgres:9.6.2-alpine
              imagePullPolicy: {{ .Values.global.imagePullPolicy | default "IfNotPresent" }}
              name: postgres-taskarchive-cron
              command:
                - sh
                - -c
                - |
                  echo  "$POSTGRES_DBHOST:*:*:$POSTGRES_DBSUPERUSER:$POSTGRES_DBSUPERUSERPWD" > ~/.pgpass; chmod 0600 ~/.pgpass;
                  for i in $(seq 0 $(($SHARD_COUNT-1))); do psql -h $POSTGRES_DBHOST -U $POSTGRES_DBSUPERUSER -d cp${i} -Atc "TRUNCATE TABLE tasks_archive;"; done;
                  for i in $(seq 0 $(($SHARD_COUNT-1))); do psql -h $POSTGRES_DBHOST -U $POSTGRES_DBSUPERUSER -d cp${i} -Atc "select count(*) from tasks_archive;"; done;
              securityContext:
                runAsUser: 70
              env:
                - name: POSTGRES_DBHOST
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.global.db.secret.name }}
                      key: dbhost
                - name: POSTGRES_DBSUPERUSER
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.global.db.secret.name }}-root
                      key: dbsuperuser
                - name: POSTGRES_DBSUPERUSERPWD
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.global.db.secret.name }}-root
                      key: dbsuperuserpwd
                - name: SHARD_COUNT
                  value: '{{ .Values.global.db.shards_count }}'
          restartPolicy: OnFailure
{{- end }}
